{
  "name": "lock_and_cache",
  "version": "5.3.9",
  "description": "Most caching libraries don't do locking, meaning that >1 process can be calculating a cached value at the same time. Since you presumably cache things because they cost CPU, database reads, or money, doesn't it make sense to lock while caching?",
  "main": "index.js",
  "keywords": [
    "redlock",
    "lock",
    "cache",
    "redis"
  ],
  "author": "Madeline Davies <npm@madd.tech>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/faradayio/lock_and_cache_js.git"
  },
  "scripts": {
    "test": "NODE_ENV=test babel-node test.js",
    "lint": "standard"
  },
  "devDependencies": {
    "@babel/cli": "^7.4.3",
    "@babel/core": "^7.4.3",
    "@babel/node": "^7.2.2",
    "@babel/plugin-proposal-object-rest-spread": "^7.4.3",
    "@babel/preset-env": "^7.4.3",
    "babel-eslint": "^10.0.1",
    "eslint": "^5.16.0",
    "git-validate": "^2.1.4",
    "standard": "^7.1.1",
    "tape": "^4.10.1",
    "tape-promise": "^4.0.0"
  },
  "pre-commit": [
    "lint"
  ],
  "dependencies": {
    "cache-manager": "^2.9.0",
    "cache-manager-redis-store": "^1.5.0",
    "death": "^1.1.0",
    "redis": "^2.6.2"
  },
  "standard": {
    "parser": "babel-eslint"
  }
}
